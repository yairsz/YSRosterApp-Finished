1) In xcode, prove the order of the view controller lifecycle events (view did load, view will appear, etc) and explain how you did this.

To prove the order of the view life cycle we can simply use some NSLogs in the implementation of every delegate method that a view calls as it gets on screen and leaves and so on. As the methods get called they will log their name to the console and the order in wich they are called will be proven.
    
    these code looks as follows
    
@implementation YSViewControllerForAssingment
    
- (void)viewDidLoad
{
    [super viewDidLoad];
	// Do any additional setup after loading the view.
    NSLog(@"View Did Load");
}

-(void) viewWillLayoutSubviews
{
    NSLog(@"View Will Layout Subviews");
}

-(void) viewDidLayoutSubviews
{
    NSLog(@"View Did Layout Subviews");
}

-(void) viewWillAppear:(BOOL)animated
{
    NSLog(@"View Will Appear");
}

-(void) viewDidAppear:(BOOL)animated
{
    NSLog(@"View Did Appear");
}

-(void) viewWillDisappear:(BOOL)animated
{
    NSLog(@"View Will Disappear");
};

-(void) viewDidDisappear:(BOOL)animated
{
    NSLog(@"View Did Disappear");
}

@end
    
The Result:


2014-01-16 14:03:25.344 YSRosterApp[19156:70b] View Did Load
2014-01-16 14:03:25.346 YSRosterApp[19156:70b] View Will Appear
2014-01-16 14:03:25.350 YSRosterApp[19156:70b] View Will Layout Subviews
2014-01-16 14:03:25.350 YSRosterApp[19156:70b] View Did Layout Subviews
2014-01-16 14:03:25.853 YSRosterApp[19156:70b] View Did Appear
2014-01-16 14:03:25.853 YSRosterApp[19156:70b] View Will Layout Subviews
2014-01-16 14:03:25.854 YSRosterApp[19156:70b] View Did Layout Subviews
2014-01-16 14:03:28.694 YSRosterApp[19156:70b] View Will Disappear
2014-01-16 14:03:29.198 YSRosterApp[19156:70b] View Did Disappear



2) When creating a uiview programmatically, we use have to create a CGRect for the views frame. Explain the 4 values needed to use the CGRectMake() function

    CG rect is a rectangle, to describe it we need four values:
    CGRectMake(<#CGFloat x#>, <#CGFloat y#>, <#CGFloat width#>, <#CGFloat height#>)
    
    1st parameter <#CGFloat x#>: Horizontal component of the origin, starting on top left corner.
    2nd Parameter <#CGFloat y#>: Vertical component of the origin, starting at top left corner.
    3rd Parameter <#CGFloat width#>: The width (horizontal) of the rectangle.
    4th Parameter <#CGFloat height#>: The height (vertical) of the rectangle.
    
    
3) What method do you a send a view to remove it from the super view?

    [view removeFromSuperview];


4)Explain bounds vs frame

    The frame describes the views size and position relative to the superviews coordenate system.
    
    The bounds decribes the views size and position relative to its own origin.
    
    
